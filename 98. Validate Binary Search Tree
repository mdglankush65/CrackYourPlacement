/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool solve(TreeNode* root,int left,int right){
        if(!root)
            return true;
        if(root->val<left || root->val>right)
            return false;
        if(root->val==INT_MIN && root->left)
            return false;
        if(root->val==INT_MAX && root->right)
            return false;
        return solve(root->left,left,root->val>INT_MIN?root->val-1:root->val) && solve(root->right,root->val<INT_MAX?root->val+1:root->val,right);
    }
    bool isValidBST(TreeNode* root) {
        int left=INT_MIN,right=INT_MAX;
        return solve(root,left,right);
    }
};
