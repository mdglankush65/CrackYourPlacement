/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(!head)
            return head;
        Node* curr=head;
        while(curr){
            Node* temp=new Node(curr->val);
            temp->next=curr->next;
            curr->next=temp;
            curr=temp->next;
        }
        curr=head;
        Node* next=head->next;
        while(curr){
            if(curr->random)
                next->random=curr->random->next;
            curr=next->next;
            if(curr)
            next=curr->next;
        }
        next=head->next;
        Node* random=next;
        curr=head;
        while(curr){
            curr->next=next->next;
            curr=curr->next;
            if(curr)
            next->next=curr->next;
            if(next)
            next=next->next;
        }
        return random;
    }
};
