class Solution
{
    public:
    //Function to find minimum number of operations that are required 
    //to make the matrix beautiful.
    int findMinOpeartion(vector<vector<int> > matrix, int n)
    {
        vector<int> rows,col;
        for(int i=0;i<n;i++){
            int sum=0;
            for(int j=0;j<n;j++){
                sum+=matrix[i][j];
            }
            rows.push_back(sum);
        }
        for(int i=0;i<n;i++){
            int sum=0;
            for(int j=0;j<n;j++){
                sum+=matrix[j][i];
            }
            col.push_back(sum);
        }
        int row_max= *max_element(rows.begin(),rows.end());
        int col_max= *max_element(col.begin(),col.end());
        int row_sum=0,col_sum=0;
        for(auto i:rows)
            row_sum+=row_max-i;
        for(auto i:col)
            col_sum+=col_max-i;
        return max(col_sum,row_sum);
    } 
};
