/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(!root)
            return 0;
        queue<pair<TreeNode*,long long int>> q;
        q.push({root,0});
        int mx=1;
        while(!q.empty()){
            int s=q.size();
            int a=0,b=0;
            int mn=q.front().second;
            int i=0;
            while(i<s){
                TreeNode* curr=q.front().first;
                long long int ind=q.front().second-mn;
                q.pop();
                if(i==0)
                    a=ind;
                if(i==s-1)
                    b=ind;
                if(curr->left)
                    q.push({curr->left,2*ind+1});
                if(curr->right)
                    q.push({curr->right,2*ind+2});
                i++;
            }
            mx=max(mx,b-a+1);
        }
        return mx;
    }
};
