/* Structure of the linked list node is as
struct Node 
{
    int data;
    struct Node* next;
    Node(int x) { data = x;  next = NULL; }
};
*/


class Solution{
  public:
    //Function to sort the given linked list using Merge Sort.
    Node* merge(Node* h1,Node* h2){
        Node* ans=new Node(0);
        Node* tail=ans;
        while(h1 && h2){
            if(h1->data>h2->data){
                tail->next=h2;
                tail=h2;
                h2=h2->next;
            }
            else{
                tail->next=h1;
                tail=h1;
                h1=h1->next;
            }
        }
        if(h1)
            tail->next=h1;
        if(h2)
            tail->next=h2;
        return ans->next;
    }
    Node* mergeSort(Node* head) {
        if(!head || !head->next)
            return head;
        Node* h1=head,*h2=head,*slow=head,*fast=head->next;
        // while(fast){
        //     slow=slow->next;
        //     fast=fast->next;
        //     if(fast)
        //         fast=fast->next;
        // }
        fast=slow;
        while (fast->next != NULL && fast->next->next != NULL) {
            slow = slow->next;
            fast = fast->next->next;
        }
        h2=slow->next;
        slow->next=NULL;
        h1=mergeSort(h1);
        h2=mergeSort(h2);
        return merge(h1,h2);
    }
};
