/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // void preorder(TreeNode* root,int &low,int &high,long int &count){
    //     if(root==NULL)
    //         return ;
    //     if(root->val<=high && root->val>=low)
    //         count+=root->val;
    //     preorder(root->left,low,high,count);
    //     preorder(root->right,low,high,count);
    // }
    int rangeSumBST(TreeNode* root, int low, int high) {
        // long int count=0;
        // preorder(root,low,high,count);
        // return count;
        if(!root)
            return 0;
        int sum=0;
        if(root->val>=low && root->val<=high)
            sum+=root->val;
        return sum+rangeSumBST(root->left,low,high)+rangeSumBST(root->right,low,high);
    }
};
