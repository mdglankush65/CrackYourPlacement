// class Solution {
// public:
    // bool validPalindrome(string s) {
    //     int n=s.length();
    //     int i=0,j=n-1;
    //     bool flag=true;
    //     while(i<=j){
    //         while(i<=j && s[i]==s[j]){
    //             i++;
    //             j--;
    //         }
    //         if(i>j)
    //             return true;
    //         if(s[i]==s[j-1] && flag){
    //             flag=false;
    //             j--;
    //         }
    //         else if(s[i+1]==s[j] && flag){
    //             flag=false;
    //             i++;
    //         }
    //         else    return false;
    //     }
    //     return false;
    // }
// };

class Solution {
public:
    bool validPalindrome(string s) {
        int i = 0;
        int j = s.size() - 1;
        
        while(i <= j){
            if(s[i] == s[j]){
                i++;
                j--;
            }
            else return isPalindrome(s, i + 1, j) || isPalindrome(s, i, j - 1);
        }
        return true;
    }
    bool isPalindrome(string s, int i, int j){
        while(i <= j){
            if(s[i] == s[j]){
                i++;
                j--;
            }
            else return false;
        }
        return true;
    }
};
