class Solution
{
    public:
    //Function to find the length of longest common subsequence in two strings.
    // int func(int i,int j,int &n,int &m,string &a,string &b,vector<vector<int>> &dp){
    //     if(i>=n || j>=m)
    //         return 0;
    //     if(dp[i][j]!=-1)
    //         return dp[i][j];
        // int ans=0;
        // if(a[i]==b[j])
        //     ans= 1+func(i+1,j+1,n,m,a,b,dp);
        // else
        //     ans=max(func(i,j+1,n,m,a,b,dp),func(i+1,j,n,m,a,b,dp));
        // return dp[i][j]=ans;
    // }
    int lcs(int n, int m, string a, string b){
        // vector<vector<int>>  dp(n,vector<int> (m,-1));
        // return func(0,0,n,m,s1,s2,dp);
        vector<vector<int>>  dp(n+1,vector<int> (m+1,0));
        for(int i=n-1;i>=0;i--){
            for(int j=m-1;j>=0;j--){
                int ans=0;
                if(a[i]==b[j])
                    ans= 1+dp[i+1][j+1];
                else
                    ans=max(dp[i][j+1],dp[i+1][j]);
                dp[i][j]=ans;    
            }
        }
        return dp[0][0];
    }
};
